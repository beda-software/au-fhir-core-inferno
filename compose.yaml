version: '3'
services:
  inferno:
    build:
      context: ./
    volumes:
      - ./data:/opt/inferno/data
      - ./lib/:/opt/inferno/lib
    depends_on:
      validator-api:
        condition: service_started
      redis:
        condition: service_started
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: inferno
      POSTGRES_USER: postgres
  inferno-worker:
    build:
      context: ./
    volumes:
      - ./data:/opt/inferno/data
    command: bundle exec sidekiq -r ./worker.rb
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: inferno
      POSTGRES_USER: postgres
  validator-api:
    image: infernocommunity/fhir-validator-service
    environment:
      TX_SERVER_URL: http://tx.test.hl7.org.au/fhir
    volumes:
      - ./lib/au_core_test_kit/igs:/home/igs
  validator-web:
    image: infernocommunity/fhir-validator-app
    depends_on:
      validator-api:
        condition: service_started
    environment:
      EXTERNAL_VALIDATOR_URL: http://localhost/validatorapi
      VALIDATOR_BASE_PATH: /validator
  nginx:
    image: nginx
    ports:
      - "80:80"
    command: [nginx, '-g', 'daemon off;']
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      validator-api:
        condition: service_started
      inferno:
        condition: service_started
  redis:
    image: redis
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - ./data/redis:/data
    command: redis-server --appendonly yes
  postgres:
    image: postgres:16.2-alpine3.19
    restart: always
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: inferno
