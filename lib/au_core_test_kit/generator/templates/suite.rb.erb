require 'base64'
require 'inferno/dsl/oauth_credentials'
require_relative '../../version'
require_relative '<%= capability_statement_file_name %>'
require_relative '../../custom_groups/smart_app_launch_group'
require_relative '../../au_core_options'
require_relative '../../helpers'

<% group_file_list.each do |file_name| %>require_relative '<%= file_name %>'
<% end %>
module AUCoreTestKit
  module <%= module_name %>
    class <%= class_name %> < Inferno::TestSuite
      title '<%= title %>'
      description %(
        The AU Core Test Kit tests systems for their conformance to the [AU Core
        Implementation Guide](<%=ig_link %>).

        HL7® FHIR® resources are validated with the Java validator using
        `#{ENV.fetch('TX_SERVER_URL', 'https://tx.dev.hl7.org.au/fhir')}` as the terminology server.
      )
      version VERSION

      VALIDATION_MESSAGE_FILTERS = [
        %r{Sub-extension url 'introspect' is not defined by the Extension http://fhir-registry\.smarthealthit\.org/StructureDefinition/oauth-uris},
        %r{Sub-extension url 'revoke' is not defined by the Extension http://fhir-registry\.smarthealthit\.org/StructureDefinition/oauth-uris},
        /Observation\.effective\.ofType\(Period\): .*vs-1:/, # Invalid invariant in FHIR v4.0.1
        /Observation\.effective\.ofType\(Period\): .*us-core-1:/, # Invalid invariant in AU Core v3.1.1
        /Provenance.agent\[\d*\]: Rule provenance-1/, #Invalid invariant in AU Core v5.0.1
        /\A\S+: \S+: URL value '.*' does not resolve/,
      ].freeze

      VERSION_SPECIFIC_MESSAGE_FILTERS = <%=version_specific_message_filters%>.freeze

      def self.metadata
        @metadata ||= YAML.load_file(File.join(__dir__, 'metadata.yml'), aliases: true)[:groups].map do |raw_metadata|
            Generator::GroupMetadata.new(raw_metadata)
          end
      end

      fhir_resource_validator do
        igs '<%= ig_identifier %>'
        message_filters = VALIDATION_MESSAGE_FILTERS + VERSION_SPECIFIC_MESSAGE_FILTERS

        cli_context do
          txServer ENV.fetch('TX_SERVER_URL', 'https://tx.dev.hl7.org.au/fhir')
          disableDefaultResourceFetcher false
        end

        exclude_message do |message|
          message_filters.any? { |filter| filter.match? message.message }
        end

        perform_additional_validation do |resource, profile_url|
          ProvenanceValidator.validate(resource) if resource.instance_of?(FHIR::Provenance)
        end
      end

      id :<%= suite_id %>

      input :url,
        title: 'FHIR Endpoint',
        description: 'URL of the FHIR endpoint',
        default: 'https://fhir.hl7.org.au/aucore/fhir/DEFAULT'
      input :smart_credentials,
        title: 'OAuth Credentials',
        type: :oauth_credentials,
        optional: true
      input :header_name,
            title: 'Header name',
            optional: true
      input :header_value,
            title: 'Header value',
            optional: true

      fhir_client do
        url :url
        oauth_credentials :smart_credentials
        headers Helpers.get_http_header(header_name, header_value)
      end

      <%# Temporary removed: https://github.com/heathfrankel/inferno-au-core/issues/7 %>
      <%# suite_option :smart_app_launch_version,
        title: 'SMART App Launch Version',
        list_options: [
          {
            label: 'SMART App Launch 1.0.0',
            value: AUCoreOptions::SMART_1
          },
          {
            label: 'SMART App Launch 2.0.0',
            value: AUCoreOptions::SMART_2
          }
        ] %>

      <%# group from: :au_core_smart_app_launch %>

      group do
        title 'AU Core FHIR API'
        id :<%= fhir_api_group_id %>

        group from: :<%= capability_statement_group_id %>
      <% group_id_list.each do |id| %>
        group from: :<%= id %>
      <% end %>
      end
    end
  end
end
